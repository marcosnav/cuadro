// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PuzzleBoard/> renders properly 1`] = `
.c2 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(0px,0px);
  -ms-transform: translate(0px,0px);
  transform: translate(0px,0px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c4 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(134px,0px);
  -ms-transform: translate(134px,0px);
  transform: translate(134px,0px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c6 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(201px,0px);
  -ms-transform: translate(201px,0px);
  transform: translate(201px,0px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c8 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(0px,67px);
  -ms-transform: translate(0px,67px);
  transform: translate(0px,67px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c10 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(67px,67px);
  -ms-transform: translate(67px,67px);
  transform: translate(67px,67px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c12 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(134px,67px);
  -ms-transform: translate(134px,67px);
  transform: translate(134px,67px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c14 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(201px,67px);
  -ms-transform: translate(201px,67px);
  transform: translate(201px,67px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c16 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(0px,134px);
  -ms-transform: translate(0px,134px);
  transform: translate(0px,134px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c18 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(67px,134px);
  -ms-transform: translate(67px,134px);
  transform: translate(67px,134px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c20 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(134px,134px);
  -ms-transform: translate(134px,134px);
  transform: translate(134px,134px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c22 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(201px,134px);
  -ms-transform: translate(201px,134px);
  transform: translate(201px,134px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c24 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(0px,201px);
  -ms-transform: translate(0px,201px);
  transform: translate(0px,201px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c26 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(67px,201px);
  -ms-transform: translate(67px,201px);
  transform: translate(67px,201px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c28 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(134px,201px);
  -ms-transform: translate(134px,201px);
  transform: translate(134px,201px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c30 {
  background: cyan;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  -webkit-transform: translate(201px,201px);
  -ms-transform: translate(201px,201px);
  transform: translate(201px,201px);
  -webkit-transition: all 0.2s ease;
  transition: all 0.2s ease;
  width: 67px;
}

.c3 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-67px,0px);
  -ms-transform: translate(-67px,0px);
  transform: translate(-67px,0px);
  width: 268px;
}

.c5 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-134px,0px);
  -ms-transform: translate(-134px,0px);
  transform: translate(-134px,0px);
  width: 268px;
}

.c7 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-201px,0px);
  -ms-transform: translate(-201px,0px);
  transform: translate(-201px,0px);
  width: 268px;
}

.c9 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(0px,-67px);
  -ms-transform: translate(0px,-67px);
  transform: translate(0px,-67px);
  width: 268px;
}

.c11 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-67px,-67px);
  -ms-transform: translate(-67px,-67px);
  transform: translate(-67px,-67px);
  width: 268px;
}

.c13 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-134px,-67px);
  -ms-transform: translate(-134px,-67px);
  transform: translate(-134px,-67px);
  width: 268px;
}

.c15 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-201px,-67px);
  -ms-transform: translate(-201px,-67px);
  transform: translate(-201px,-67px);
  width: 268px;
}

.c17 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(0px,-134px);
  -ms-transform: translate(0px,-134px);
  transform: translate(0px,-134px);
  width: 268px;
}

.c19 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-67px,-134px);
  -ms-transform: translate(-67px,-134px);
  transform: translate(-67px,-134px);
  width: 268px;
}

.c21 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-134px,-134px);
  -ms-transform: translate(-134px,-134px);
  transform: translate(-134px,-134px);
  width: 268px;
}

.c23 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-201px,-134px);
  -ms-transform: translate(-201px,-134px);
  transform: translate(-201px,-134px);
  width: 268px;
}

.c25 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(0px,-201px);
  -ms-transform: translate(0px,-201px);
  transform: translate(0px,-201px);
  width: 268px;
}

.c27 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-67px,-201px);
  -ms-transform: translate(-67px,-201px);
  transform: translate(-67px,-201px);
  width: 268px;
}

.c29 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-134px,-201px);
  -ms-transform: translate(-134px,-201px);
  transform: translate(-134px,-201px);
  width: 268px;
}

.c31 {
  background: gray;
  background-image: url();
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  -webkit-transform: translate(-201px,-201px);
  -ms-transform: translate(-201px,-201px);
  transform: translate(-201px,-201px);
  width: 268px;
}

.c0 {
  background-position: center center;
  background-size: cover cover;
  border-radius: 3px;
  box-shadow: 0 4px 8px 3px rgba(0,0,0,0.2);
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  height: 300px;
  margin-top: 16px;
  padding: 16px;
  position: relative;
  width: 300px;
}

.c1 {
  box-shadow: inset 0 1px 4px 2px rgba(0,0,0,0.1);
  height: 268px;
  width: 268px;
}

<PuzzleBoard
  image=""
  onSwipe={[Function]}
  puzzleState={
    Array [
      1,
      0,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
    ]
  }
>
  <Board
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  background: ",
              [Function],
              ";
  background-position: center center;
  background-size: cover cover;
  border-radius: 3px;
  box-shadow: 0 4px 8px 3px rgba(0, 0, 0, 0.2);
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;
  height: 300px;
  margin-top: 16px;
  padding: 16px;
  position: relative;
  width: 300px;
",
            ],
          },
          "displayName": "Board",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      onTouchEnd={[Function]}
      onTouchStart={[Function]}
    >
      <div
        className="c0"
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
      >
        <Holder>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  background: ",
                    [Function],
                    ";
  box-shadow: inset 0 1px 4px 2px rgba(0, 0, 0, 0.1);
  height: 268px;
  width: 268px;
",
                  ],
                },
                "displayName": "Holder",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <PuzzlePiece
                image=""
                key="1"
                num={1}
                position={0}
              >
                <Piece
                  left={0}
                  top={0}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={0}
                    top={0}
                  >
                    <div
                      className="c2"
                    >
                      <PieceImage
                        image=""
                        left={-67}
                        top={-0}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-67}
                          top={-0}
                        >
                          <div
                            className="c3"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="2"
                num={2}
                position={2}
              >
                <Piece
                  left={134}
                  top={0}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={134}
                    top={0}
                  >
                    <div
                      className="c4"
                    >
                      <PieceImage
                        image=""
                        left={-134}
                        top={-0}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-134}
                          top={-0}
                        >
                          <div
                            className="c5"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="3"
                num={3}
                position={3}
              >
                <Piece
                  left={201}
                  top={0}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={201}
                    top={0}
                  >
                    <div
                      className="c6"
                    >
                      <PieceImage
                        image=""
                        left={-201}
                        top={-0}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-201}
                          top={-0}
                        >
                          <div
                            className="c7"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="4"
                num={4}
                position={4}
              >
                <Piece
                  left={0}
                  top={67}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={0}
                    top={67}
                  >
                    <div
                      className="c8"
                    >
                      <PieceImage
                        image=""
                        left={-0}
                        top={-67}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-0}
                          top={-67}
                        >
                          <div
                            className="c9"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="5"
                num={5}
                position={5}
              >
                <Piece
                  left={67}
                  top={67}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={67}
                    top={67}
                  >
                    <div
                      className="c10"
                    >
                      <PieceImage
                        image=""
                        left={-67}
                        top={-67}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-67}
                          top={-67}
                        >
                          <div
                            className="c11"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="6"
                num={6}
                position={6}
              >
                <Piece
                  left={134}
                  top={67}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={134}
                    top={67}
                  >
                    <div
                      className="c12"
                    >
                      <PieceImage
                        image=""
                        left={-134}
                        top={-67}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-134}
                          top={-67}
                        >
                          <div
                            className="c13"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="7"
                num={7}
                position={7}
              >
                <Piece
                  left={201}
                  top={67}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={201}
                    top={67}
                  >
                    <div
                      className="c14"
                    >
                      <PieceImage
                        image=""
                        left={-201}
                        top={-67}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-201}
                          top={-67}
                        >
                          <div
                            className="c15"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="8"
                num={8}
                position={8}
              >
                <Piece
                  left={0}
                  top={134}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={0}
                    top={134}
                  >
                    <div
                      className="c16"
                    >
                      <PieceImage
                        image=""
                        left={-0}
                        top={-134}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-0}
                          top={-134}
                        >
                          <div
                            className="c17"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="9"
                num={9}
                position={9}
              >
                <Piece
                  left={67}
                  top={134}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={67}
                    top={134}
                  >
                    <div
                      className="c18"
                    >
                      <PieceImage
                        image=""
                        left={-67}
                        top={-134}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-67}
                          top={-134}
                        >
                          <div
                            className="c19"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="10"
                num={10}
                position={10}
              >
                <Piece
                  left={134}
                  top={134}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={134}
                    top={134}
                  >
                    <div
                      className="c20"
                    >
                      <PieceImage
                        image=""
                        left={-134}
                        top={-134}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-134}
                          top={-134}
                        >
                          <div
                            className="c21"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="11"
                num={11}
                position={11}
              >
                <Piece
                  left={201}
                  top={134}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={201}
                    top={134}
                  >
                    <div
                      className="c22"
                    >
                      <PieceImage
                        image=""
                        left={-201}
                        top={-134}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-201}
                          top={-134}
                        >
                          <div
                            className="c23"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="12"
                num={12}
                position={12}
              >
                <Piece
                  left={0}
                  top={201}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={0}
                    top={201}
                  >
                    <div
                      className="c24"
                    >
                      <PieceImage
                        image=""
                        left={-0}
                        top={-201}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-0}
                          top={-201}
                        >
                          <div
                            className="c25"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="13"
                num={13}
                position={13}
              >
                <Piece
                  left={67}
                  top={201}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={67}
                    top={201}
                  >
                    <div
                      className="c26"
                    >
                      <PieceImage
                        image=""
                        left={-67}
                        top={-201}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-67}
                          top={-201}
                        >
                          <div
                            className="c27"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="14"
                num={14}
                position={14}
              >
                <Piece
                  left={134}
                  top={201}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={134}
                    top={201}
                  >
                    <div
                      className="c28"
                    >
                      <PieceImage
                        image=""
                        left={-134}
                        top={-201}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-134}
                          top={-201}
                        >
                          <div
                            className="c29"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
              <PuzzlePiece
                image=""
                key="15"
                num={15}
                position={15}
              >
                <Piece
                  left={201}
                  top={201}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c30",
                          "rules": Array [
                            "
  background: cyan;
  flex-shrink: 0;
  height: 67px;
  left: 16px;
  overflow: hidden;
  position: absolute;
  top: 16px;
  transform: ",
                            [Function],
                            ";
  transition: all 0.2s ease;
  width: 67px;
",
                          ],
                        },
                        "displayName": "Piece",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    left={201}
                    top={201}
                  >
                    <div
                      className="c30"
                    >
                      <PieceImage
                        image=""
                        left={-201}
                        top={-201}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bwzfXH",
                                "isStatic": false,
                                "lastClassName": "c31",
                                "rules": Array [
                                  "
  background: gray;
  background-image: url(",
                                  [Function],
                                  ");
  background-position: center center;
  background-size: cover cover;
  height: 268px;
  position: relative;
  transform: ",
                                  [Function],
                                  ";
  width: 268px;
",
                                ],
                              },
                              "displayName": "PieceImage",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bwzfXH",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          image=""
                          left={-201}
                          top={-201}
                        >
                          <div
                            className="c31"
                          />
                        </StyledComponent>
                      </PieceImage>
                    </div>
                  </StyledComponent>
                </Piece>
              </PuzzlePiece>
            </div>
          </StyledComponent>
        </Holder>
      </div>
    </StyledComponent>
  </Board>
</PuzzleBoard>
`;
