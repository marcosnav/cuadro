// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Controls/> renders properly 1`] = `
.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: #FFF;
  border: none;
  color: #303030;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  font-size: 0.64em;
  font-weight: bold;
  height: 42px;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  opacity: 1;
  padding: 0;
}

.c1:focus {
  outline: none;
}

.c2 {
  height: 26px;
  width: auto;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: #FFF;
  border-radius: 3px;
  box-shadow: 0 4px 8px 3px rgba(0,0,0,0.2);
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 68px;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-top: 26px;
  padding: 0 16px;
  -webkit-transition: all 0.6s ease;
  transition: all 0.6s ease;
  width: 300px;
}

<Controls
  newOnly={false}
>
  <styled.section
    newOnly={false}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  align-items: center;
  background: ",
              [Function],
              ";
  border-radius: 3px;
  box-shadow: 0 4px 8px 3px rgba(0, 0, 0, 0.2);
  box-sizing: border-box;
  display: flex;
  height: 68px;
  justify-content: space-between;
  margin-top: 26px;
  padding: ",
              [Function],
              ";
  transition: all 0.6s ease;
  width: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.section",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "section",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      newOnly={false}
    >
      <section
        className="c0"
      >
        <ControlButton
          action={[Function]}
          disabled={false}
          type="NEW_GAME"
        >
          <styled.button
            disabled={false}
            onClick={[Function]}
          >
            <StyledComponent
              disabled={false}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  align-items: center;
  background: ",
                      [Function],
                      ";
  border: none;
  color: ",
                      [Function],
                      ";
  display: flex;
  flex-direction: column;
  font-size: 0.64em;
  font-weight: bold;
  height 42px;
  justify-content: space-between;
  opacity: ",
                      [Function],
                      ";
  padding: 0;

  &:focus {
    outline: none;
  }
",
                    ],
                  },
                  "displayName": "styled.button",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              onClick={[Function]}
            >
              <button
                className="c1"
                disabled={false}
                onClick={[Function]}
              >
                <styled.img
                  src="new.svg"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bwzfXH",
                          "isStatic": true,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  height: 26px;
  width: auto;
",
                          ],
                        },
                        "displayName": "styled.img",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bwzfXH",
                        "target": "img",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    src="new.svg"
                  >
                    <img
                      className="c2"
                      src="new.svg"
                    />
                  </StyledComponent>
                </styled.img>
                New Game
              </button>
            </StyledComponent>
          </styled.button>
        </ControlButton>
        <ControlButton
          action={[Function]}
          disabled={false}
          key="restart"
          type="RESTART_GAME"
        >
          <styled.button
            disabled={false}
            onClick={[Function]}
          >
            <StyledComponent
              disabled={false}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  align-items: center;
  background: ",
                      [Function],
                      ";
  border: none;
  color: ",
                      [Function],
                      ";
  display: flex;
  flex-direction: column;
  font-size: 0.64em;
  font-weight: bold;
  height 42px;
  justify-content: space-between;
  opacity: ",
                      [Function],
                      ";
  padding: 0;

  &:focus {
    outline: none;
  }
",
                    ],
                  },
                  "displayName": "styled.button",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              onClick={[Function]}
            >
              <button
                className="c1"
                disabled={false}
                onClick={[Function]}
              >
                <styled.img
                  src="refresh.svg"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bwzfXH",
                          "isStatic": true,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  height: 26px;
  width: auto;
",
                          ],
                        },
                        "displayName": "styled.img",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bwzfXH",
                        "target": "img",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    src="refresh.svg"
                  >
                    <img
                      className="c2"
                      src="refresh.svg"
                    />
                  </StyledComponent>
                </styled.img>
                Restart
              </button>
            </StyledComponent>
          </styled.button>
        </ControlButton>
        <ControlButton
          action={[Function]}
          disabled={false}
          key="seeoriginal"
          type="SEE_ORIGINAL"
        >
          <styled.button
            disabled={false}
            onClick={[Function]}
          >
            <StyledComponent
              disabled={false}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  align-items: center;
  background: ",
                      [Function],
                      ";
  border: none;
  color: ",
                      [Function],
                      ";
  display: flex;
  flex-direction: column;
  font-size: 0.64em;
  font-weight: bold;
  height 42px;
  justify-content: space-between;
  opacity: ",
                      [Function],
                      ";
  padding: 0;

  &:focus {
    outline: none;
  }
",
                    ],
                  },
                  "displayName": "styled.button",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              onClick={[Function]}
            >
              <button
                className="c1"
                disabled={false}
                onClick={[Function]}
              >
                <styled.img
                  src="image.svg"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bwzfXH",
                          "isStatic": true,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  height: 26px;
  width: auto;
",
                          ],
                        },
                        "displayName": "styled.img",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bwzfXH",
                        "target": "img",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    src="image.svg"
                  >
                    <img
                      className="c2"
                      src="image.svg"
                    />
                  </StyledComponent>
                </styled.img>
                See Original
              </button>
            </StyledComponent>
          </styled.button>
        </ControlButton>
      </section>
    </StyledComponent>
  </styled.section>
</Controls>
`;
